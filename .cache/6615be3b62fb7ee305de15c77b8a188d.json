{"dependencies":[{"name":"../styler/utils","loc":{"line":3,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../styler/utils\");\nvar camelCache = {};\nvar dashCache = {};\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar testElement;\nvar testPrefix = function (key) {\n    testElement = testElement || document.createElement('div');\n    for (var i = 0; i < numPrefixes; i++) {\n        var prefix = prefixes[i];\n        var noPrefix = (prefix === '');\n        var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n        if (prefixedPropertyName in testElement.style) {\n            camelCache[key] = prefixedPropertyName;\n            dashCache[key] = \"\" + (noPrefix ? '' : '-') + utils_1.camelToDash(prefixedPropertyName);\n        }\n    }\n};\nexports.default = function (key, asDashCase) {\n    if (asDashCase === void 0) { asDashCase = false; }\n    var cache = asDashCase ? dashCache : camelCache;\n    if (!cache[key])\n        testPrefix(key);\n    return cache[key];\n};\n//# sourceMappingURL=prefixer.js.map","map":{"mappings":[{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stylefire/css/prefixer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/stylefire/css/prefixer.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../styler/utils\");\nvar camelCache = {};\nvar dashCache = {};\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar testElement;\nvar testPrefix = function (key) {\n    testElement = testElement || document.createElement('div');\n    for (var i = 0; i < numPrefixes; i++) {\n        var prefix = prefixes[i];\n        var noPrefix = (prefix === '');\n        var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n        if (prefixedPropertyName in testElement.style) {\n            camelCache[key] = prefixedPropertyName;\n            dashCache[key] = \"\" + (noPrefix ? '' : '-') + utils_1.camelToDash(prefixedPropertyName);\n        }\n    }\n};\nexports.default = function (key, asDashCase) {\n    if (asDashCase === void 0) { asDashCase = false; }\n    var cache = asDashCase ? dashCache : camelCache;\n    if (!cache[key])\n        testPrefix(key);\n    return cache[key];\n};\n//# sourceMappingURL=prefixer.js.map"},"lineCount":28}},"hash":"45bf0c2289bfe6c71480772b0ea781a0","cacheData":{"env":{}}}