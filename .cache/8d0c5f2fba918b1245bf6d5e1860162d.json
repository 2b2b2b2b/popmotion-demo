{"dependencies":[],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar clamp = function (min, max) { return function (v) { return Math.max(Math.min(v, max), min); }; };\nvar contains = function (term) { return function (v) { return (typeof term === 'string' && v.indexOf(term) !== -1); }; };\nvar createUnitType = function (unit) { return ({\n    test: contains(unit),\n    parse: parseFloat,\n    transform: function (v) { return \"\" + v + unit; }\n}); };\nvar isFirstChars = function (term) { return function (v) { return (typeof term === 'string' && v.indexOf(term) === 0); }; };\nexports.getValueFromFunctionString = function (value) { return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')')); };\nexports.splitCommaDelimited = function (value) { return typeof value === 'string' ? value.split(/,\\s*/) : [value]; };\nfunction splitColorValues(terms) {\n    var numTerms = terms.length;\n    return function (v) {\n        var values = {};\n        var valuesArray = exports.splitCommaDelimited(exports.getValueFromFunctionString(v));\n        for (var i = 0; i < numTerms; i++) {\n            values[terms[i]] = (valuesArray[i] !== undefined) ? parseFloat(valuesArray[i]) : 1;\n        }\n        return values;\n    };\n}\nexports.splitColorValues = splitColorValues;\nexports.number = {\n    test: function (v) { return typeof v === 'number'; },\n    parse: parseFloat,\n    transform: function (v) { return v; }\n};\nexports.alpha = __assign({}, exports.number, { transform: clamp(0, 1) });\nexports.degrees = createUnitType('deg');\nexports.percent = createUnitType('%');\nexports.px = createUnitType('px');\nexports.scale = __assign({}, exports.number, { default: 1 });\nvar FLOAT_REGEX = /(-)?(\\d[\\d\\.]*)/g;\nvar generateToken = function (token) { return '${' + token + '}'; };\nexports.complex = {\n    test: function (v) {\n        var matches = v.match && v.match(FLOAT_REGEX);\n        return (matches !== undefined && matches.constructor === Array && matches.length > 1);\n    },\n    parse: function (v) {\n        var parsedValue = {};\n        v.match(FLOAT_REGEX).forEach(function (value, i) { return parsedValue[i] = parseFloat(value); });\n        return parsedValue;\n    },\n    createTransformer: function (prop) {\n        var counter = 0;\n        var template = prop.replace(FLOAT_REGEX, function () { return generateToken(\"\" + counter++); });\n        return function (v) {\n            var output = template;\n            for (var key in v) {\n                if (v.hasOwnProperty(key)) {\n                    output = output.replace(generateToken(key), v[key].toString());\n                }\n            }\n            return output;\n        };\n    }\n};\nvar clampRgbUnit = clamp(0, 255);\nexports.rgbUnit = __assign({}, exports.number, { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgbaTemplate = function (_a) {\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha + \")\";\n};\nexports.rgba = {\n    test: isFirstChars('rgb'),\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, alpha = _a.alpha;\n        return rgbaTemplate({\n            red: exports.rgbUnit.transform(red),\n            green: exports.rgbUnit.transform(green),\n            blue: exports.rgbUnit.transform(blue),\n            alpha: alpha\n        });\n    }\n};\nvar hslaTemplate = function (_a) {\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha + \")\";\n};\nexports.hsla = {\n    test: isFirstChars('hsl'),\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\n    transform: function (_a) {\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, alpha = _a.alpha;\n        return hslaTemplate({\n            hue: Math.round(hue),\n            saturation: exports.percent.transform(saturation),\n            lightness: exports.percent.transform(lightness),\n            alpha: alpha\n        });\n    }\n};\nexports.hex = __assign({}, exports.rgba, { test: isFirstChars('#'), parse: function (v) {\n        var r, g, b;\n        if (v.length > 4) {\n            r = v.substr(1, 2);\n            g = v.substr(3, 2);\n            b = v.substr(5, 2);\n        }\n        else {\n            r = v.substr(1, 1);\n            g = v.substr(2, 1);\n            b = v.substr(3, 1);\n            r += r;\n            g += g;\n            b += b;\n        }\n        return {\n            red: parseInt(r, 16),\n            green: parseInt(g, 16),\n            blue: parseInt(b, 16),\n            alpha: 1\n        };\n    } });\nvar isRgba = function (v) { return v.red !== undefined; };\nvar isHsla = function (v) { return v.hue !== undefined; };\nexports.color = {\n    test: function (v) { return exports.rgba.test(v) || exports.hsla.test(v) || exports.hex.test(v); },\n    parse: function (v) {\n        if (exports.rgba.test(v)) {\n            return exports.rgba.parse(v);\n        }\n        else if (exports.hsla.test(v)) {\n            return exports.hsla.parse(v);\n        }\n        else if (exports.hex.test(v)) {\n            return exports.hex.parse(v);\n        }\n        return v;\n    },\n    transform: function (v) {\n        if (isRgba(v)) {\n            return exports.rgba.transform(v);\n        }\n        else if (isHsla(v)) {\n            return exports.hsla.transform(v);\n        }\n        return v;\n    }\n};\n//# sourceMappingURL=index.js.map","map":{"mappings":[{"source":"node_modules/style-value-types/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/style-value-types/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}}],"sources":{"node_modules/style-value-types/lib/index.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar clamp = function (min, max) { return function (v) { return Math.max(Math.min(v, max), min); }; };\nvar contains = function (term) { return function (v) { return (typeof term === 'string' && v.indexOf(term) !== -1); }; };\nvar createUnitType = function (unit) { return ({\n    test: contains(unit),\n    parse: parseFloat,\n    transform: function (v) { return \"\" + v + unit; }\n}); };\nvar isFirstChars = function (term) { return function (v) { return (typeof term === 'string' && v.indexOf(term) === 0); }; };\nexports.getValueFromFunctionString = function (value) { return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')')); };\nexports.splitCommaDelimited = function (value) { return typeof value === 'string' ? value.split(/,\\s*/) : [value]; };\nfunction splitColorValues(terms) {\n    var numTerms = terms.length;\n    return function (v) {\n        var values = {};\n        var valuesArray = exports.splitCommaDelimited(exports.getValueFromFunctionString(v));\n        for (var i = 0; i < numTerms; i++) {\n            values[terms[i]] = (valuesArray[i] !== undefined) ? parseFloat(valuesArray[i]) : 1;\n        }\n        return values;\n    };\n}\nexports.splitColorValues = splitColorValues;\nexports.number = {\n    test: function (v) { return typeof v === 'number'; },\n    parse: parseFloat,\n    transform: function (v) { return v; }\n};\nexports.alpha = __assign({}, exports.number, { transform: clamp(0, 1) });\nexports.degrees = createUnitType('deg');\nexports.percent = createUnitType('%');\nexports.px = createUnitType('px');\nexports.scale = __assign({}, exports.number, { default: 1 });\nvar FLOAT_REGEX = /(-)?(\\d[\\d\\.]*)/g;\nvar generateToken = function (token) { return '${' + token + '}'; };\nexports.complex = {\n    test: function (v) {\n        var matches = v.match && v.match(FLOAT_REGEX);\n        return (matches !== undefined && matches.constructor === Array && matches.length > 1);\n    },\n    parse: function (v) {\n        var parsedValue = {};\n        v.match(FLOAT_REGEX).forEach(function (value, i) { return parsedValue[i] = parseFloat(value); });\n        return parsedValue;\n    },\n    createTransformer: function (prop) {\n        var counter = 0;\n        var template = prop.replace(FLOAT_REGEX, function () { return generateToken(\"\" + counter++); });\n        return function (v) {\n            var output = template;\n            for (var key in v) {\n                if (v.hasOwnProperty(key)) {\n                    output = output.replace(generateToken(key), v[key].toString());\n                }\n            }\n            return output;\n        };\n    }\n};\nvar clampRgbUnit = clamp(0, 255);\nexports.rgbUnit = __assign({}, exports.number, { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgbaTemplate = function (_a) {\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha + \")\";\n};\nexports.rgba = {\n    test: isFirstChars('rgb'),\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, alpha = _a.alpha;\n        return rgbaTemplate({\n            red: exports.rgbUnit.transform(red),\n            green: exports.rgbUnit.transform(green),\n            blue: exports.rgbUnit.transform(blue),\n            alpha: alpha\n        });\n    }\n};\nvar hslaTemplate = function (_a) {\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha = _b === void 0 ? 1 : _b;\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha + \")\";\n};\nexports.hsla = {\n    test: isFirstChars('hsl'),\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\n    transform: function (_a) {\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, alpha = _a.alpha;\n        return hslaTemplate({\n            hue: Math.round(hue),\n            saturation: exports.percent.transform(saturation),\n            lightness: exports.percent.transform(lightness),\n            alpha: alpha\n        });\n    }\n};\nexports.hex = __assign({}, exports.rgba, { test: isFirstChars('#'), parse: function (v) {\n        var r, g, b;\n        if (v.length > 4) {\n            r = v.substr(1, 2);\n            g = v.substr(3, 2);\n            b = v.substr(5, 2);\n        }\n        else {\n            r = v.substr(1, 1);\n            g = v.substr(2, 1);\n            b = v.substr(3, 1);\n            r += r;\n            g += g;\n            b += b;\n        }\n        return {\n            red: parseInt(r, 16),\n            green: parseInt(g, 16),\n            blue: parseInt(b, 16),\n            alpha: 1\n        };\n    } });\nvar isRgba = function (v) { return v.red !== undefined; };\nvar isHsla = function (v) { return v.hue !== undefined; };\nexports.color = {\n    test: function (v) { return exports.rgba.test(v) || exports.hsla.test(v) || exports.hex.test(v); },\n    parse: function (v) {\n        if (exports.rgba.test(v)) {\n            return exports.rgba.parse(v);\n        }\n        else if (exports.hsla.test(v)) {\n            return exports.hsla.parse(v);\n        }\n        else if (exports.hex.test(v)) {\n            return exports.hex.parse(v);\n        }\n        return v;\n    },\n    transform: function (v) {\n        if (isRgba(v)) {\n            return exports.rgba.transform(v);\n        }\n        else if (isHsla(v)) {\n            return exports.hsla.transform(v);\n        }\n        return v;\n    }\n};\n//# sourceMappingURL=index.js.map"},"lineCount":153}},"hash":"ac729f7c65159ea0108fe4fe24118591","cacheData":{"env":{}}}