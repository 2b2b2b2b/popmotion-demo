{"dependencies":[{"name":"./transform-props","loc":{"line":3,"column":32}},{"name":"./prefixer","loc":{"line":4,"column":25}},{"name":"./value-types","loc":{"line":5,"column":28}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transform_props_1 = require(\"./transform-props\");\nvar prefixer_1 = require(\"./prefixer\");\nvar value_types_1 = require(\"./value-types\");\nfunction buildStylePropertyString(element, state, changedValues, enableHardwareAcceleration) {\n    var propertyString = '';\n    var transformString = '';\n    var hasTransform = false;\n    var transformHasZ = false;\n    var numChangedValues = changedValues.length;\n    for (var i = 0; i < numChangedValues; i++) {\n        var key = changedValues[i];\n        if (transform_props_1.isTransformProp(key)) {\n            hasTransform = true;\n            for (var stateKey in state) {\n                if (transform_props_1.isTransformProp(stateKey) && changedValues.indexOf(stateKey) === -1) {\n                    changedValues.push(stateKey);\n                }\n            }\n            break;\n        }\n    }\n    changedValues.sort(transform_props_1.sortTransformProps);\n    var totalNumChangedValues = changedValues.length;\n    for (var i = 0; i < totalNumChangedValues; i++) {\n        var key = changedValues[i];\n        var value = state[key];\n        var valueType = value_types_1.default(key);\n        if (valueType && (typeof value === 'number' || typeof value === 'object') && valueType.transform) {\n            value = valueType.transform(value);\n        }\n        if (transform_props_1.isTransformProp(key)) {\n            transformString += key + '(' + value + ') ';\n            transformHasZ = (key === 'translateZ') ? true : transformHasZ;\n        }\n        else {\n            propertyString += ';' + prefixer_1.default(key, true) + ':' + value;\n        }\n    }\n    if (hasTransform) {\n        if (!transformHasZ && enableHardwareAcceleration) {\n            transformString += 'translateZ(0)';\n        }\n        propertyString += ';' + prefixer_1.default('transform', true) + ':' + transformString;\n    }\n    element.style.cssText += propertyString;\n}\nexports.default = buildStylePropertyString;\n//# sourceMappingURL=render.js.map"},"hash":"90d1b71dabea2ec0dd7cf014e953210b"}