{"dependencies":[{"name":"./_internal","loc":{"line":4,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = undefined;\n\nvar _internal = require('./_internal');\n\n// Split a collection into two arrays: one whose elements all satisfy the given\n// predicate, and one whose elements all do not satisfy the predicate.\nvar _partition = (0, _internal.group)((result, value, pass) => {\n\tresult[pass ? 0 : 1].push(value);\n}, true); // `_partition` : a collection's function\n// ---------------------------------------\n\nexports.default = _partition;","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":0}},{"name":"_partition","generated":{"line":12,"column":4},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":4}},{"generated":{"line":12,"column":17},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":17}},{"generated":{"line":12,"column":38},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":24}},{"name":"result","generated":{"line":12,"column":39},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":25}},{"generated":{"line":12,"column":45},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":24}},{"name":"value","generated":{"line":12,"column":47},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":33}},{"generated":{"line":12,"column":52},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":24}},{"name":"pass","generated":{"line":12,"column":54},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":40}},{"generated":{"line":12,"column":58},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":24}},{"generated":{"line":12,"column":63},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":49}},{"name":"result","generated":{"line":13,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":1}},{"name":"pass","generated":{"line":13,"column":8},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":8}},{"generated":{"line":13,"column":15},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":15}},{"generated":{"line":13,"column":16},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":8}},{"generated":{"line":13,"column":19},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":19}},{"generated":{"line":13,"column":20},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":1}},{"name":"push","generated":{"line":13,"column":22},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":22}},{"generated":{"line":13,"column":26},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":1}},{"name":"value","generated":{"line":13,"column":27},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":27}},{"generated":{"line":13,"column":32},"source":"node_modules/underscore-es/partition.js","original":{"line":9,"column":1}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":10,"column":1}},{"generated":{"line":14,"column":1},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":17}},{"generated":{"line":14,"column":3},"source":"node_modules/underscore-es/partition.js","original":{"line":10,"column":3}},{"generated":{"line":14,"column":7},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":17}},{"generated":{"line":14,"column":8},"source":"node_modules/underscore-es/partition.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":10},"source":"node_modules/underscore-es/partition.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore-es/partition.js","original":{"line":2,"column":0}},{"name":"default","generated":{"line":17,"column":8},"source":"node_modules/underscore-es/partition.js","original":{"line":12,"column":22}},{"name":"_partition","generated":{"line":17,"column":18},"source":"node_modules/underscore-es/partition.js","original":{"line":12,"column":8}}],"sources":{"node_modules/underscore-es/partition.js":"// `_partition` : a collection's function\n// ---------------------------------------\n\nimport {group} from './_internal';\n\n// Split a collection into two arrays: one whose elements all satisfy the given\n// predicate, and one whose elements all do not satisfy the predicate.\nvar _partition = group( (result, value, pass) => {\n\tresult[pass ? 0 : 1].push(value);\n}, true);\n\nexport {_partition as default};"},"lineCount":null}},"hash":"c7dfe4a649fcfd15290730809f2372cd","cacheData":{"env":{}}}