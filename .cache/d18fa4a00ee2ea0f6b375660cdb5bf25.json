{"dependencies":[{"name":"../action","loc":{"line":3,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar action_1 = require(\"../action\");\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action_1.default(function (observer) {\n        var subs = actions.map(function (thisAction) { return thisAction.start(observer); });\n        return {\n            stop: function () { return subs.forEach(function (sub) { return sub.stop(); }); }\n        };\n    });\n};\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","map":{"mappings":[{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/popmotion/compositors/merge.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/popmotion/compositors/merge.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar action_1 = require(\"../action\");\nvar merge = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return action_1.default(function (observer) {\n        var subs = actions.map(function (thisAction) { return thisAction.start(observer); });\n        return {\n            stop: function () { return subs.forEach(function (sub) { return sub.stop(); }); }\n        };\n    });\n};\nexports.default = merge;\n//# sourceMappingURL=merge.js.map"},"lineCount":17}},"hash":"c0e08bf495634643b8bf4a6471425f79","cacheData":{"env":{}}}